#!/bin/bash

# Get directory

dir=$(pwd)

# Root

Check=$(whoami)

if [[ $Check == root ]]; then
	tput setaf 1
	echo "Not execute this script with root"
	exit
fi

# Remove 

rm -r $dir/search
touch $dir/search
chmod +777 $dir/search

## Version gui ##

VerG="v1.5"

### Content ###

function content {

echo '#!/usr/bin/env bash

# Root

Check=$(whoami)

if [[ $Check == root ]]; then
	tput setaf 1
	echo "Not execute this script with root"
	exit
fi

# Check Version

function Version {
tput setaf 3
echo "Checking Version..."
VersionLocal=14
VersionLAN=$(wget -qO- https://raw.githubusercontent.com/LBY-L/VersionSearcH/main/version)
if [[ $VersionLocal == $VersionLAN ]]; then
	clear
	echo ""
else
	clear
	tput setaf 2
	tput cup 0 0
	echo "Do want to update?"
	tput cup 0 19
	tput setaf 4
	echo "(y/n)"
	read -n1 input
	if [[ $input == y ]]; then
		bash -c "$(wget -qO- https://raw.githubusercontent.com/LBY-L/SearcHinTerminaL/main/Install)"
	elif [[ $input == n ]]; then
		echo ""
	fi
fi	 
}

# Get termina credits (Gogh-Co) -> https://github.com/Gogh-Co/Gogh

pid="$$"
TERMIN="$(ps -h -o comm -p $pid)"
while [[ "${TERMIN:(-2)}" == "sh" ]]; do
pid="$(ps -h -o ppid -p $pid)"
TERMIN="$(ps -h -o comm -p $pid)"
done

if [[ $TERMIN == tilix ]]; then
	termin=tilix
elif [[ $TERMIN == konsole ]]; then
	termin=konsole
elif [[ $TERMIN == gnome-terminal- ]]; then
	termin=gnome-terminal
elif [[ $TERMIN == xfce4-terminal ]]; then
	termin=xfce4-terminal
elif [[ $TERMIN == alacritty ]]; then
	termin=alacritty
elif [[ $TERMIN == kitty ]]; then
	termin=kitty
else
	tput setaf 2
	echo "Please"
	tput setaf 3
	echo "Use this terminals:"
	echo ""
	tput setaf 4
	echo "Tilix"
	echo "Konsole"
	echo "Gnome terminal (in a few days is going to remove because the flag -e is going to decrapted)"
	echo "Xfce Terminal"
	echo "Alacritty"
	echo "Kitty"
	exit
fi

# Get browser

browser=$(cat ~/.config/Default-Broser-DB)

# Start the app

function start {
while true; do

	rm -r /tmp/buscador-tmp
	touch /tmp/buscador-tmp
	tput setab 0
	clear
	x=$(tput cols)
	y=$(tput lines)
	x2=$(($x / 2))
	y2=$(($y / 2))
	y5=$(($y2 - 6))
	x2=$(($x2 - 22))
	y3=$(($y2 + 1))
	y4=$(($y3 + 1))
	y6="$y2"

function ReT {
	tput setaf 1
	echo "Not allowed resolution"
	exit
}
	
if [[ $x -le 43 ]]; then
	ReT
elif [[ $y -le 11 ]]; then
	ReT
fi	

	tput cup $y5 $x2
	tput setaf 3
	echo " ██████╗ ██╗   ██╗ ██████╗ ██╗   ██╗██╗     "
	y5=$(($y5 + 1))
	tput cup $y5 $x2
	tput setaf 3
	echo "██╔════╝ ██║   ██║██╔════╝ ██║   ██║██║     "
	y5=$(($y5 + 1))
	tput cup $y5 $x2
	tput setaf 3
	echo "██║  ███╗██║   ██║██║  ███╗██║   ██║██║     "
	y5=$(($y5 + 1))
	tput cup $y5 $x2
	tput setaf 3
	echo "██║   ██║██║   ██║██║   ██║██║   ██║██║     "
	y5=$(($y5 + 1))
	tput cup $y5 $x2
	tput setaf 3
	echo "╚██████╔╝╚██████╔╝╚██████╔╝╚██████╔╝███████╗"
	y5=$(($y5 + 1))
	tput cup $y5 $x2
	tput setaf 3
	echo " ╚═════╝  ╚═════╝  ╚═════╝  ╚═════╝ ╚══════╝"

function LineS {
	tput setaf 13
	echo "═"
}

for (( i=0; i<=$x; i++ ))
do
	tput cup $y4 $i
	LineS
done

for (( i=0; i<=$x; i++ ))
do
	tput cup $y6 $i
	LineS
done

if [[ $d == "true" ]]; then
	bar=""
elif [[ $g == "true" ]]; then
	bar=""
fi

	tput cup $y4 0
	echo "═＜$bar＞═To reboot use :r & to exit use :q═"
	tput cup $y6 0
	echo "═＜v1.5＞═"
	tput cup $y3 0
	tput setaf 15
	read input

if [[ -z $input ]]; then
	echo ""
elif [[ $input == ":r" ]]; then
	echo ""
elif [[ $input == ":q" ]]; then
	clear
	exit 0
elif [[ $input == ":R" ]]; then
	echo ""
elif [[ $input == ":Q" ]]; then
	clear
	exit 0
else
	tr " " "+" <<< "$input" > /tmp/search-tmp
	
	input2=$(cat /tmp/search-tmp)

	if [[ $g == "true" ]]; then
		search="https://www.google.com/search?q=$input2"
	elif [[ $d == "true" ]]; then
		search="https://duckduckgo.com/?q=$input2&t=h_&ia=web"
	fi
		$termin -e "$browser -e $search"
	clear
fi

done
}

# Flags

function flags {
	tput setaf 1
	echo "                    [Flags]                  "   
	tput setaf 3
	echo "To change the search engine to Google      -g"
	echo "To change the search engine to DuckDuckGo  -d"
	echo "To show this window                        -h"
	echo "To show this window                    --help"
	echo "To remove this program                     -r"
	echo "( The default search engine is DuckDuckGo )  "
}

if [[ $1 == -g ]]; then
	Version
	g="true"
	start
elif [[ $1 == -d ]]; then
	Version
	d="true"
	start
elif [[ $1 == -h ]]; then
	flags
elif [[ $1 == --help ]]; then
	flags
elif [[ $1 == -r ]]; then
	sudo rm -r /usr/bin/search
else
	Version
	d="true"
	start
fi' >> $dir/search

}

### INSTALLATION ###

Verify=$(ls ~/.config/Default-Broser-DB)
function message {
tput setaf 2
echo "Search $VerG is installed"
}
if [[ $Verify == ~/.config/Default-Broser-DB ]]; then
	content
	sudo cp $dir/search /usr/bin/ 
	clear
	message
else
	touch ~/.config/Default-Broser-DB
	echo 'chromium' >> ~/.config/Default-Broser-DB
	content
	sudo cp $dir/search /usr/bin/
	clear
	message
fi
